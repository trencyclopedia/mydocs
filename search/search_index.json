{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MyDocs This site hosts some of my blogs bothn in Egnlish and Chinese. This document is generatd by MkDocs, for full documentation visit mkdocs.org . English Blogs Documentating tools & MkDocs usage tips 14:10 Monday, December 13, 2021 I have been searching a lightweith, scablable and easy-to-use documentation method for around half a year since I finished my 100+ page-dissertation and wrote many other personal notes using Microsft Word. Previously, I mainly used Word, OneNote, Notion to write notes, organize personal plans and projects. These tools works quite well for me at the beginning, but after I accumulated more data and records (e.g. seveal documents with 1000+ pages), they begin to struggle with performance and scability. I relize it is time to find an alternative. Initially, I tried to write Markdown(md) documents,which are quite light-weith. But they are not very appealing to me at the beginning, since I miss some key features like table of cotents, navigation structures offered by what-you-see-is-what-you-get applications(e.g. Microsoft Word). But later on, when I browsed many extensive long structured documents and manuals wrote in Markdown for open source projects, I reallize it would be a good solution to my problem too. These documents can either be hosted on-line in Github or coverted to locally browserale chm files. Then I started to learn these enabling tools for such documentation. I soon gave up sphinx after finding that MkDocs has the same functionality with more simpler Markdown syntax and easier configuration. Publish on Github repository With MkDocs, all the md documents can be viewed locally on your browser. More attractively, they can be easily pushed to your Github repository and to be viewly publicly on a website as manuals or blogs as well. These features are really fantastic! To fully benefit from this feature, firstly create a repositrory on your github account and clone it into your local computer. Starting from the local folder magic can happen soon, and you just execute the following commands or follow the instructions from mkdocs.org : * `mkdocs new .` - Create a new project. * `mkdocs serve` - Start the live-reloading docs server, and view it at http://127.0.0.1:8000/ in your browser * `mkdocs build` - Build the documentation site. * `mkdocs gh-deploy` - upload your local documents to your remote repository on github and publish there. \u4e2d\u6587\u7b14\u8bb0","title":"Home"},{"location":"#welcome-to-mydocs","text":"This site hosts some of my blogs bothn in Egnlish and Chinese. This document is generatd by MkDocs, for full documentation visit mkdocs.org .","title":"Welcome to MyDocs"},{"location":"#english-blogs","text":"","title":"English Blogs"},{"location":"#documentating-tools-mkdocs-usage-tips","text":"14:10 Monday, December 13, 2021 I have been searching a lightweith, scablable and easy-to-use documentation method for around half a year since I finished my 100+ page-dissertation and wrote many other personal notes using Microsft Word. Previously, I mainly used Word, OneNote, Notion to write notes, organize personal plans and projects. These tools works quite well for me at the beginning, but after I accumulated more data and records (e.g. seveal documents with 1000+ pages), they begin to struggle with performance and scability. I relize it is time to find an alternative. Initially, I tried to write Markdown(md) documents,which are quite light-weith. But they are not very appealing to me at the beginning, since I miss some key features like table of cotents, navigation structures offered by what-you-see-is-what-you-get applications(e.g. Microsoft Word). But later on, when I browsed many extensive long structured documents and manuals wrote in Markdown for open source projects, I reallize it would be a good solution to my problem too. These documents can either be hosted on-line in Github or coverted to locally browserale chm files. Then I started to learn these enabling tools for such documentation. I soon gave up sphinx after finding that MkDocs has the same functionality with more simpler Markdown syntax and easier configuration.","title":"Documentating tools &amp; MkDocs usage tips"},{"location":"#publish-on-github-repository","text":"With MkDocs, all the md documents can be viewed locally on your browser. More attractively, they can be easily pushed to your Github repository and to be viewly publicly on a website as manuals or blogs as well. These features are really fantastic! To fully benefit from this feature, firstly create a repositrory on your github account and clone it into your local computer. Starting from the local folder magic can happen soon, and you just execute the following commands or follow the instructions from mkdocs.org : * `mkdocs new .` - Create a new project. * `mkdocs serve` - Start the live-reloading docs server, and view it at http://127.0.0.1:8000/ in your browser * `mkdocs build` - Build the documentation site. * `mkdocs gh-deploy` - upload your local documents to your remote repository on github and publish there.","title":"Publish on Github repository"},{"location":"#_1","text":"","title":"\u4e2d\u6587\u7b14\u8bb0"}]}